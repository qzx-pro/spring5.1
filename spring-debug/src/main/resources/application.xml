<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">
<!--	<bean id="demo" class="com.qzx.aop.Demo"/>-->
<!--	<bean id="advice" class="com.qzx.aop.MyAdvice"/>-->
<!--	<aop:config>-->
<!--		<aop:aspect ref="advice">-->
<!--			<aop:pointcut id="point" expression="execution(* com.qzx.aop.Demo.demo1())"/>-->
<!--			<aop:before method="myBefore" pointcut-ref="point"/>-->
<!--			<aop:after method="myAfter" pointcut-ref="point"/>-->
<!--		</aop:aspect>-->
<!--	</aop:config>-->
	<!-- 加载properties文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 配置数据源，读取properties文件信息 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
	</bean>
	<!-- 配置jdbc模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置dao -->
	<bean id="accountDao" class="com.qzx.tx.AccountDaoImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	<!-- 配置service -->
	<bean id="accountService" class="com.qzx.tx.AccountServiceImpl">
		<property name="accountDao" ref="accountDao" />
	</bean>
	<!-- 事务管理器，依赖于数据源 -->
	<bean id="txManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- aop编写，让Spring自动对目标生成代理，需要使用AspectJ的表达式 -->
	<aop:config>
		<!-- 切入点 -->
		<aop:pointcut expression="execution(* com.qzx.tx.*.*(..))" id="txPointCut" />
		<!-- 切面：将切入点与通知整合 -->
		<aop:advisor pointcut-ref="txPointCut" advice-ref="txAdvice" />
	</aop:config>
	<!-- 编写通知：对事务进行增强（通知），需要编写切入点和具体执行事务的细节 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 给切入点方法添加事务详情，name表示方法名称，*表示任意方法名称，propagation用于设置传播行为，read-only表示隔离级别，是否只读 -->
			<tx:method name="transfer" propagation="REQUIRED" />
			<tx:method name="out" propagation="REQUIRES_NEW" />
		</tx:attributes>
	</tx:advice>
	<aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>